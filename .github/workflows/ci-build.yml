name: Metadata-Manager-CI

on: [push, pull_request]

jobs:
  Build:
    name: Build Metadata-Manager ( ${{ matrix.container-tag }} ) 
    runs-on: [self-hosted, docker]
    timeout-minutes: 30
    container:
      image:  ghcr.io/project-tsurugi/oltp-sandbox:${{ matrix.container-tag }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}
    defaults:
      run:
        shell: bash
    env:
      BUILD_TYPE: ''
    strategy:
      fail-fast: false
      matrix:
        container-tag: [ubuntu-20.04]
      
    steps:
      - id: Make_CI_Directory_Postgresql
        name: Make_CI_Directory_Postgresql
        run: |
          cd ${GITHUB_WORKSPACE}
          rm -rf ci_test
          mkdir ci_test

      - id: Checkout_Postgresql
        name: Checkout_Postgresql
        uses: actions/checkout@v2
        with:
          path: ci_test
          submodules: recursive
          token: ${{ secrets.GHA_PAT }}

      - id: CMake_Build_metadata-manager_Postgresql
        name: CMake_Build_metadata-manager_Postgresql
        run: |
          cd ${GITHUB_WORKSPACE}/ci_test
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DFORCE_INSTALL_RPATH=ON -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ..
          cmake --build . --target install --clean-first -- -j8
          make
          make install
          
      - id: Cleanup_Postgresql
        name: Cleanup_Postgresql
        run: |
          rm -rf ${GITHUB_WORKSPACE}/.local/
          rm -rf ${GITHUB_WORKSPACE}/ci_test
          
      - id: Make_CI_Directory_Json
        name: Make_CI_Directory_Json
        run: |
          cd ${GITHUB_WORKSPACE}
          rm -rf ci_test2
          mkdir ci_test2

      - id: Checkout_Json
        name: Checkout_Json
        uses: actions/checkout@v2
        with:
          path: ci_test2
          submodules: recursive
          token: ${{ secrets.GHA_PAT }}
          
      - id: CMake_Build_metadata-manager_Json
        name: CMake_Build_metadata-manager_Json
        run: |
          cd ${GITHUB_WORKSPACE}/ci_test2
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DFORCE_INSTALL_RPATH=ON -DDATA_STORAGE=json -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/.local ..
          cmake --build . --target install --clean-first -- -j8
          make
          make install
          
      - id: Cleanup_Json
        name: Cleanup_Json
        run: |
          rm -rf ${GITHUB_WORKSPACE}/.local/
          rm -rf ${GITHUB_WORKSPACE}/ci_test2
