/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    api 'org.apache.commons:commons-math3:3.6.1'
    //implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
    implementation 'com.auth0:java-jwt:4.0.0'

    // testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    // testImplementation 'org.mockito:mockito-core:3.6.0'
    // testImplementation 'org.mockito:mockito-junit-jupiter:3.6.0'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation 'org.mockito:mockito-core:4.6.1'
    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation 'org.mockito:mockito-inline:4.6.1'
    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
}

jar {
    archiveFileName = 'authentication-manager.jar'
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    testLogging {
        // テスト時の標準出力と標準エラー出力を表示する
        showStandardStreams true
        // イベントを出力する (TestLogEvent)
        events 'started', 'skipped', 'passed', 'failed'
        // 例外発生時の出力設定 (TestExceptionFormat)
        exceptionFormat 'full'
    }

    // report is always generated after tests run
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    // tests are required to run before generating the report
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}